crontab is a Unix/Linux command used to schedule jobs (commands or scripts) to run automatically at specified intervals. These tasks are managed by the cron daemon, which is a time-based job scheduler in Unix-like systems.

A crontab file contains a list of cron jobs, with each line in the file specifying a time and the command or script to be executed. Each user, including the root user, can have their own crontab file.

Syntax of Crontab Entries
Each line in a crontab file has the following format:

*  *  *  *  * command_to_execute
-  -  -  -  -
|  |  |  |  |
|  |  |  |  +----- Day of the week (0 - 7) (Sunday=0 or 7)
|  |  |  +------- Month (1 - 12)
|  |  +--------- Day of the month (1 - 31)
|  +----------- Hour (0 - 23)
+------------- Minute (0 - 59)
You specify the time by filling in these fields. You can use an asterisk (*) to represent "any" value for that field.

Common Time Settings Examples
Here are some common examples of crontab time settings that Iâ€™ve used or encountered:

1. Run a Script Every Day at 2:30 AM

30 2 * * * /path/to/script.sh

30: Minute (30 minutes past the hour)
2: Hour (2 AM)
The rest (* * *) means "any" day of the month, month, and day of the week.

2. Run a Command Every 5 Minutes

*/5 * * * * /path/to/command.sh

The */5 means "every 5 minutes".
The rest (* * * *) means "any" hour, day, month, and weekday.

3. Run a Task on the First Day of Every Month at Midnight

0 0 1 * * /path/to/task.sh
0: Minute (on the hour)
0: Hour (midnight)
1: Day of the month (1st day of the month)
The rest (* *) means "any" month and weekday.

4. Run a Script Every Monday at 6:15 AM

15 6 * * 1 /path/to/script.sh
15: Minute (15 minutes past the hour)
6: Hour (6 AM)
The last 1 indicates Monday (as Sunday is 0 or 7).

5. Run a Job Every Hour

0 * * * * /path/to/hourly_job.sh
0: Minute (at the beginning of the hour)
The rest (* * * *) indicates "any" hour, day, month, and weekday.

6. Run a Script Every Day at 11:30 PM

30 23 * * * /path/to/nightly_task.sh
30: Minute (30 minutes past the hour)
23: Hour (11 PM)

7. Run a Backup Script Every Sunday at 3 AM

0 3 * * 0 /path/to/backup.sh
0: Minute (on the hour)
3: Hour (3 AM)
0: Sunday (day of the week)

8. Run a Task Every 10 Minutes During Office Hours (9 AM to 6 PM)

*/10 9-18 * * * /path/to/task.sh
*/10: Every 10 minutes
9-18: Hours from 9 AM to 6 PM

9. Run a Script on the 15th of Every Month at 5:45 PM

45 17 15 * * /path/to/script.sh
45: Minute (45 minutes past the hour)
17: Hour (5 PM)
15: Day of the month (15th)

10. Run a Task at 8:00 AM from Monday to Friday

0 8 * * 1-5 /path/to/weekday_task.sh
0: Minute (on the hour)
8: Hour (8 AM)
1-5: Monday to Friday (days of the week)

Managing crontab

Edit the crontab for the current user:
crontab -e

List the current user's crontab jobs:
crontab -l

Remove all crontab jobs for the current user:
crontab -r

Summary
* stands for "every" or "any" in each time field.
You can use specific numbers or ranges (e.g., 1-5 for Monday to Friday).
Cron jobs are used for repetitive tasks such as backups, system maintenance, or running automated scripts at specific intervals.